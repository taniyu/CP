ProcNonShareTest.c
  親プロセスと子プロセスのメモリ空間は独立している状態で，同じ大域変数 
  x の値を，親プロセスが1秒おき，子プロセスが0.5秒おきに10回インクリメ
  ントする．

ProcShareTest.c
  大域変数の代わりに，共有メモリ機構を用いて確保した共有メモリ領域を用
  いることを除き，ProcNonShareTest.c と同じである．
  共有変数の使い方の例となっている．

ProcShareTest2.c
  親と子で共有メモリ領域を割り当てる仮想アドレスを異なるようにしている
  ことを除き，ProcShareTest.c と同じ．
  共有メモリを割り当てる仮想アドレスを明示的に指定する例となっている．

ProcSemTest.c
  親プロセスと子プロセスの両方ともクリティカルセクションとそれ以外で乱
  数で発生した時間 (マイクロ秒) スリープすることを5回繰り返す．クリティ
  カルセクションに入る前にセマフォの P 命令を，出た後に V 命令を実行す
  る．
  セマフォを用いた排他制御の例となっている．

ProcShareTest3.c
  親プロセスと子プロセスが共有メモリ領域を待ち時間を設けずに連続してそ
  れぞれが1億回インクリメントする．初期値を0として，1000万回毎に値を表
  示する．
  排他制御をしないときの不具合の例となっている．

ProcShareSem.c
  インクリメントするときにセマフォを用いて排他制御を行うことを行うこと
  除き，ProcShareTest3.c と同じ．但し，排他制御には時間がかかるので，
  ループの回数および表示のタイミングを1/100にしている．
  排他制御により不具合が発生しなくなる例になっている．

ProcMsgTestPwait.c
  親プロセスから子プロセスに対してメッセージを送る．このとき，親プロセ
  スは 0.5秒 ごとにメッセージを10回送り，子プロセスは連続してメッセー
  ジを受け取るようにする．
  送り側のタイミングに合わせて受け側がメッセージを受け取っていることを
  示す例となっている．

ProcMsgTestCwait.c
  親プロセスから子プロセスに対してメッセージを送る．このとき，親プロセ
  スは連続してメッセージを40個送り，子プロセスは 0.1秒 おきにメッセー
  ジを取りに行く．メッセージプールの大きさは1000バイトにしている．

ProcMsgTestCwait2.c
  メッセージキューの大きさを小さく (100バイト) 設定したことを除き，
  ProcMsgTestCwait.c と同じ．

ProcMsgTestCwait3.c
  受け取る子プロセスを5個にしたことを除き，ProcMsgTestCwait2.c と同じ．
  但し，子プロセスの終了条件は，"end" メッセージを受け取ったときとする．
